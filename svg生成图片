利用svg和canvas结合将页面上的html内容生成一张图片，下面是
代码来源于网络
<!DOCTYPE html>
<html><body>
<h2>Input Div:</h2>
<div id="div">
<p>Just have a <span style='color:white; text-shadow:0 0 2px blue;'>TRY</span></p><p><b>By Dion</b></p>
</div>
<h2>Output Image:</h2>
<script>
    //1.将div转成svg
    var divContent = document.getElementById("div").innerHTML;
    var data = "data:image/svg+xml," +
    "<svg xmlns='http://www.w3.org/2000/svg' width='200' height='200'>" +
    "<foreignObject width='100%' height='100%'>" +
    "<div xmlns='http://www.w3.org/1999/xhtml' style='font-size:16px;font-family:Helvetica'>" +
    divContent +
    "</div>" +
    "</foreignObject>" +
    "</svg>";
    var img = new Image();
    img.src = data;
    document.getElementsByTagName('body')[0].appendChild(img);


    //2.svg转成canvas
    var canvas = document.createElement('canvas');  //准备空画布
    canvas.width = img.width;
    canvas.height = img.height;

    var context = canvas.getContext('2d');  //取得画布的2d绘图上下文
    context.drawImage(img, 0, 0);

   
    //var a = document.createElement('a');
    //a.href = canvas.toDataURL('image/png');  //将画布内的信息导出为png图片数据
    //a.download = "MapByMathArtSys";  //设定下载名称
    //a.click(); //点击触发下载


    //3. 图片导出为 png 格式
    var type = 'png';
    var imgData = canvas.toDataURL(type);

        /**
     * 获取mimeType
     * @param  {String} type the old mime-type
     * @return the new mime-type
     */
    var _fixType = function (type) {
        type = type.toLowerCase().replace(/jpg/i, 'jpeg');
        var r = type.match(/png|jpeg|bmp|gif/)[0];
        return 'image/' + r;
    };

    // 加工image data，替换mime type
    imgData = imgData.replace(_fixType(type), 'image/octet-stream');



    /**
     * 在本地进行文件保存
     * @param  {String} data     要保存到本地的图片数据
     * @param  {String} filename 文件名
     */
    var saveFile = function (data, filename) {
        var save_link = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');
        save_link.href = data;
        save_link.download = filename;

        var event = document.createEvent('MouseEvents');
        event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
        save_link.dispatchEvent(event);
    };

    // 下载后的图片名
    var filename = 'baidufe_' + (new Date()).getTime() + '.' + type;
    // download
    saveFile(imgData, filename);


</script>
</body></html>
这里要说一下svg这个强大的工具，可以直接生成图片，而且比传统图片形式更有优势
1，SVG 与 JPEG 和 GIF 图像比起来，尺寸更小，且可压缩性更强。
2，SVG 可以与 Java 技术一起运行
3，SVG 图像中的文本是可选的，同时也是可搜索的（很适合制作地图）等

svg可以绘制多种图形，而且还有动画效果，滤镜效果等，将代码拷贝到文件中，以svg保存。打开即可
比如说，矩形
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<svg width="100%" height="100%" version="1.1"
xmlns="http://www.w3.org/2000/svg">

<rect width="300" height="100"
style="fill:rgb(0,0,255);stroke-width:1;
stroke:rgb(0,0,0)"/>

</svg>
多边形：
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<svg width="100%" height="100%" version="1.1"
xmlns="http://www.w3.org/2000/svg">

<polygon points="220,100 300,210 170,250"
style="fill:#cccccc;
stroke:#000000;stroke-width:1"/>

</svg>
路径：

<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<svg width="100%" height="100%" version="1.1"
xmlns="http://www.w3.org/2000/svg">

<path d="M153 334
C153 334 151 334 151 334
C151 339 153 344 156 344
C164 344 171 339 171 334
C171 322 164 314 156 314
C142 314 131 322 131 334
C131 350 142 364 156 364
C175 364 191 350 191 334
C191 311 175 294 156 294
C131 294 111 311 111 334
C111 361 131 384 156 384
C186 384 211 361 211 334
C211 300 186 274 156 274"
style="fill:white;stroke:red;stroke-width:2"/>

</svg>
结合canvas就是将html内容放到画布上，然后将内容转换为对应的图片文件。

前端世界真的很精彩~
